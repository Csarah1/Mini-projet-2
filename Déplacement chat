   (DANS LE CAS  OU LE CHAT SE DEPLACE EN FONCTION DU LABYRINTHE)
import random
from time import sleep

def cat_move(maze:list, position : list) -> list: [int] :
    """ 
    Déplace le chat de manière aléatoire dans le labyrinthe tout en évitant les obstacles.

    Paramètres :
    ------------
    maze : liste de positions (x, y) représentant les obstacles du labyrinthe. (list)
    position : Position actuelle du chat en coordonnées [x, y] (list)

    return :
    -------
    Déplace et met à jour la position du chat.
    """
    x, y = position  # Position actuelle du chat

    # Choisir une direction aléatoire 
    direction = random.choice(["up", "down", "left", "right", "still"])

    # Vérifier les coordonnées en fonction de la direction
try:
    if direction == "up" and y > 0 and [x, y - 1] not in maze:
        y -= 1
    elif direction == "down" and y < 4 and [x, y + 1] not in maze:
        y += 1
    elif direction == "left" and x > 0 and [x - 1, y] not in maze:
        x -= 1
    elif direction == "right" and x < 4 and [x + 1, y] not in maze:
        x += 1
except:
    display.set_pixel(x, y, 7)  # Le chat ne bouge pas

    # Mettre à jour la position du chat
    position = [x, y]

while True:
    display.clear()
    # Afficher la position actuelle du chat
    display.set_pixel(position[0], position[1], 7)  # Le "7" est l'intensité du pixel

    # Déplacer le chat
    cat_move(maze)
      return

    # Pause avant le prochain mouvement
    sleep(5)  # Le chat ne bouge pas

    # Mettre à jour la position du chat
    position = [x, y]
 



(DANS LE CAS OU LE CHAT SE DEPLACE SANS TENIR COMPTE DU LABYRINTHE)

import random
from time import sleep

def cat_move(maze:list, position: list): -> list: [int]
 """
    Déplace le chat de manière aléatoire dans le labyrinthe tout en évitant les obstacles.

    Paramètres :
    ------------
    maze : liste de positions (x, y) représentant les obstacles du labyrinthe. (list)
    position : Position actuelle du chat en coordonnées [x, y] (list)

    return :
    -------
    Met à jour la position globale du chat.
"""
    x, y = position  #  la position actuelle en x et y

    # Choisir une direction aléatoire
    direction = random.choice(["up", "down", "left", "right"])

    # Ajuster les coordonnées en fonction de la direction
   if direction == "up" and y > 0 and [x, y - 1] not in maze:
        y -= 1
    elif direction == "down" and y < 4 and [x, y + 1] not in maze:
        y += 1
    elif direction == "left" and x > 0 and [x - 1, y] not in maze:
        x -= 1
    elif direction == "right" and x < 4 and [x + 1, y] not in maze:
        x += 1
    else :
        display.set_pixel(x, y, 7)  # Le chat ne bouge pas
        return [x, y]

    # Actualiser la position globale
    position = [x, y]
while True:
    display.clear()
    cat_move()

 # Afficher la position actuelle du chat
    display.set_pixel(position[0], position[1], 7)  # Afficher le chat avec l'intensité 7
    sleep(5)  # Lapse de tempds avant que le chat se déplace de nouveau
